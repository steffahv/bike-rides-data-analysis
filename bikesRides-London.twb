<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1010.1014                               -->
<workbook original-version='18.1' source-build='2024.3.0 (20243.24.1010.1014)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AnimationOnByDefault />
    <CustomReferenceLineTooltips />
    <GroupAction />
    <GroupActionAddRemove />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column alias='Day' caption='Moving Average Period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;day&quot;'>
        <calculation class='tableau' formula='&quot;day&quot;' />
        <aliases>
          <alias key='&quot;day&quot;' value='Day' />
          <alias key='&quot;month&quot;' value='Month' />
          <alias key='&quot;week&quot;' value='Week' />
        </aliases>
        <members>
          <member alias='Day' value='&quot;day&quot;' />
          <member alias='Week' value='&quot;week&quot;' />
          <member alias='Month' value='&quot;month&quot;' />
        </members>
      </column>
      <column caption='Moving Average Duration' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='50'>
        <calculation class='tableau' formula='50' />
      </column>
    </datasource>
    <datasource caption='Data (london_bikes_final)' inline='true' name='federated.0htvmtc1p3vdzo14msbfb19bjcgi' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='london_bikes_final' name='excel-direct.15leczw1j0tiuh11cts050q5utwi'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/project1/bikeRides/london_bikes_final.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.15leczw1j0tiuh11cts050q5utwi' name='Data' table='[Data$]' type='table'>
          <columns gridOrigin='A1:K17415:no:A1:K17415:0' header='yes' outcome='6'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='datetime' date-parse-format='yyyy-MM-dd HH:mm:ss' name='time' ordinal='1' />
            <column datatype='integer' name='count' ordinal='2' />
            <column datatype='real' name='temp_real_C' ordinal='3' />
            <column datatype='real' name='temp_feels_like_C' ordinal='4' />
            <column datatype='real' name='humidity_percent' ordinal='5' />
            <column datatype='real' name='wind_speed_kph' ordinal='6' />
            <column datatype='string' name='weather' ordinal='7' />
            <column datatype='integer' name='is_holiday' ordinal='8' />
            <column datatype='integer' name='is_weekend' ordinal='9' />
            <column datatype='string' name='season' ordinal='10' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:K17415:no:A1:K17415:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Data_C94966534005412F848E96071C030883]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>130</remote-type>
            <local-name>[time]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>time</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Data_C94966534005412F848E96071C030883]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[count]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>count</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Data_C94966534005412F848E96071C030883]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>temp_real_C</remote-name>
            <remote-type>5</remote-type>
            <local-name>[temp_real_C]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>temp_real_C</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Data_C94966534005412F848E96071C030883]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>temp_feels_like_C</remote-name>
            <remote-type>5</remote-type>
            <local-name>[temp_feels_like_C]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>temp_feels_like_C</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Data_C94966534005412F848E96071C030883]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>humidity_percent</remote-name>
            <remote-type>5</remote-type>
            <local-name>[humidity_percent]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>humidity_percent</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Data_C94966534005412F848E96071C030883]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wind_speed_kph</remote-name>
            <remote-type>5</remote-type>
            <local-name>[wind_speed_kph]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>wind_speed_kph</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Data_C94966534005412F848E96071C030883]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weather</remote-name>
            <remote-type>130</remote-type>
            <local-name>[weather]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>weather</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Data_C94966534005412F848E96071C030883]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_holiday</remote-name>
            <remote-type>20</remote-type>
            <local-name>[is_holiday]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>is_holiday</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Data_C94966534005412F848E96071C030883]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_weekend</remote-name>
            <remote-type>20</remote-type>
            <local-name>[is_weekend]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>is_weekend</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Data_C94966534005412F848E96071C030883]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>season</remote-name>
            <remote-type>130</remote-type>
            <local-name>[season]</local-name>
            <parent-name>[Data]</parent-name>
            <remote-alias>season</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Data_C94966534005412F848E96071C030883]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Moving Average Rides' datatype='real' name='[Calculation1]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG(SUM([count]), -[Parameters].[Parameter 2]+1, 0)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='In Range' datatype='boolean' name='[Calculation_258957018417389568]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Calculation_879890815977439232] &gt;= [Calculation_879890815980064769]&#13;&#10;AND&#13;&#10;[Calculation_879890815977439232] &lt;= [Min Month (copy)_879890815981150210]' />
      </column>
      <column caption='In Range Rides' datatype='integer' name='[Calculation_258957018428805121]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ SUM(INT([Calculation_258957018417389568]) * [count]) }' />
      </column>
      <column caption='Moving Average Period' datatype='date' datatype-customized='true' name='[Calculation_879890815977439232]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(DATETRUNC([Parameters].[Parameter 1],[time]))' />
      </column>
      <column caption='Min Month' datatype='date' name='[Calculation_879890815980064769]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='{ MIN(IF[Moving Average Period Set] THEN [Calculation_879890815977439232] END) }' />
      </column>
      <column caption='Max Month ' datatype='date' name='[Min Month (copy)_879890815981150210]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='{ MAX(IF[Moving Average Period Set] THEN [Calculation_879890815977439232] END) }' />
      </column>
      <column caption='Wind Kph' datatype='integer' name='[Wind Speed Kph (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='-2' formula='[wind_speed_kph]' peg='0' size='3.43' />
      </column>
      <column caption='Data' datatype='table' name='[__tableau_internal_object_id__].[Data_C94966534005412F848E96071C030883]' role='measure' type='quantitative' />
      <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
      <column caption='Humidity Percent' datatype='real' name='[humidity_percent]' role='measure' type='quantitative' />
      <column caption='Is Holiday' datatype='integer' name='[is_holiday]' role='measure' type='quantitative' />
      <column caption='Is Weekend' datatype='integer' name='[is_weekend]' role='measure' type='quantitative' />
      <column caption='Season' datatype='string' name='[season]' role='dimension' type='nominal' />
      <column caption='Temp C' datatype='integer' name='[temp real C (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='-2' formula='[temp_real_C]' peg='0' size='2.49' />
      </column>
      <column caption='temp feels like C' datatype='real' name='[temp_feels_like_C]' role='measure' type='quantitative' />
      <column caption='temp real C' datatype='real' name='[temp_real_C]' role='measure' type='quantitative' />
      <column caption='Time' datatype='datetime' datatype-customized='true' name='[time]' role='dimension' type='ordinal' />
      <column caption='Weather' datatype='string' name='[weather]' role='dimension' type='nominal' />
      <column caption='Wind Speed Kph' datatype='real' name='[wind_speed_kph]' role='measure' type='quantitative' />
      <group caption='Moving Average Period Set' name='[Moving Average Period Set]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-01-04#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-01-05#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-01-06#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-01-07#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-01-08#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-01-09#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-01-10#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-01-11#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-01-12#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-01-13#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-01-14#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-01-15#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-01-16#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-01-17#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-01-18#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-01-19#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-01-20#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-01-21#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-01-22#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-01-23#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-01-24#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-01-25#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-01-26#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-01-27#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-01-28#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-01-29#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-01-30#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-01-31#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-02-01#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-02-02#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-02-03#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-02-04#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-02-05#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-02-06#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-02-07#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-02-08#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-02-09#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-02-10#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-02-11#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-02-12#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-02-13#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-02-14#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-02-15#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-02-16#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-02-17#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-02-18#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-02-19#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-02-20#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-02-21#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-02-22#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-02-23#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-02-24#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-02-25#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-02-26#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-02-27#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-02-28#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-03-01#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-03-02#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-03-03#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-03-04#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-03-05#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-03-06#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-03-07#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-03-08#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-03-09#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-03-10#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-03-11#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-03-12#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-03-13#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-03-14#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-03-15#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-03-16#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-03-17#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-03-18#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-03-19#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-03-20#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-03-21#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-03-22#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-03-23#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-03-24#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-03-25#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-03-26#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-03-27#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-03-28#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-03-29#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-03-30#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-03-31#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-04-01#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-04-02#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-04-03#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-04-04#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-04-05#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-04-06#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-04-07#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-04-08#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-04-09#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-04-10#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-04-11#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-04-12#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-04-13#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-04-14#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-04-15#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-04-16#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-04-17#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-04-18#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-04-19#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-04-20#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-04-21#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-04-22#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-04-23#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-04-24#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-04-25#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-04-26#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-04-27#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-04-28#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-04-29#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-04-30#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-05-01#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-05-02#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-05-03#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-05-04#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-05-05#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-05-06#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-05-07#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-05-08#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-05-09#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-05-10#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-05-11#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-05-12#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-05-13#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-05-14#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-05-15#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-05-16#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-05-17#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-05-18#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-05-19#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-05-20#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-05-21#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-05-22#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-05-23#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-05-24#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-05-25#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-05-26#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-05-27#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-05-28#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-05-29#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-05-30#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-05-31#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-06-01#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-06-02#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-06-03#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-06-04#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-06-05#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-06-06#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-06-07#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-06-08#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-06-09#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-06-10#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-06-11#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-06-12#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-06-13#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-06-14#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-06-15#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-06-16#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-06-17#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-06-18#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-06-19#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-06-20#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-06-21#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-06-22#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-06-23#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-06-24#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-06-25#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-06-26#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-06-27#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-06-28#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-06-29#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-06-30#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-07-01#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-07-02#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-07-03#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-07-04#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-07-05#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-07-06#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-07-07#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-07-08#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-07-09#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-07-10#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-07-11#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-07-12#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-07-13#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-07-14#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-07-15#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-07-16#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-07-17#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-07-18#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-07-19#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-07-20#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-07-21#' />
          <groupfilter function='member' level='[Calculation_879890815977439232]' member='#2015-07-22#' />
        </groupfilter>
      </group>
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/USUARIO/AppData/Local/Temp/TableauTemp/#TableauTemp_1dgv2tt06pouxj10ylncs0s2023y.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='01/22/2025 04:27:47 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table'>
            <columns>
              <column datatype='datetime' date-parse-format='yyyy-MM-dd HH:mm:ss' name='time' />
            </columns>
          </relation>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>0</ordinal>
              <family>Data</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>17414</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Data_C94966534005412F848E96071C030883]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>time</remote-name>
              <remote-type>7</remote-type>
              <local-name>[time]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>time</remote-alias>
              <ordinal>1</ordinal>
              <family>Data</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Data_C94966534005412F848E96071C030883]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>count</remote-name>
              <remote-type>20</remote-type>
              <local-name>[count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>count</remote-alias>
              <ordinal>2</ordinal>
              <family>Data</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3493</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Data_C94966534005412F848E96071C030883]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>temp_real_C</remote-name>
              <remote-type>5</remote-type>
              <local-name>[temp_real_C]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>temp_real_C</remote-alias>
              <ordinal>3</ordinal>
              <family>Data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>69</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Data_C94966534005412F848E96071C030883]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>temp_feels_like_C</remote-name>
              <remote-type>5</remote-type>
              <local-name>[temp_feels_like_C]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>temp_feels_like_C</remote-alias>
              <ordinal>4</ordinal>
              <family>Data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>79</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Data_C94966534005412F848E96071C030883]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>humidity_percent</remote-name>
              <remote-type>5</remote-type>
              <local-name>[humidity_percent]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>humidity_percent</remote-alias>
              <ordinal>5</ordinal>
              <family>Data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>153</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Data_C94966534005412F848E96071C030883]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>wind_speed_kph</remote-name>
              <remote-type>5</remote-type>
              <local-name>[wind_speed_kph]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>wind_speed_kph</remote-alias>
              <ordinal>6</ordinal>
              <family>Data</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>103</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Data_C94966534005412F848E96071C030883]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>weather</remote-name>
              <remote-type>129</remote-type>
              <local-name>[weather]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>weather</remote-alias>
              <ordinal>7</ordinal>
              <family>Data</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Data_C94966534005412F848E96071C030883]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>is_holiday</remote-name>
              <remote-type>20</remote-type>
              <local-name>[is_holiday]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>is_holiday</remote-alias>
              <ordinal>8</ordinal>
              <family>Data</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Data_C94966534005412F848E96071C030883]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>is_weekend</remote-name>
              <remote-type>20</remote-type>
              <local-name>[is_weekend]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>is_weekend</remote-alias>
              <ordinal>9</ordinal>
              <family>Data</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <object-id>[Data_C94966534005412F848E96071C030883]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>season</remote-name>
              <remote-type>129</remote-type>
              <local-name>[season]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>season</remote-alias>
              <ordinal>10</ordinal>
              <family>Data</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <object-id>[Data_C94966534005412F848E96071C030883]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout common-percentage='0.9425' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.0575' show-structure='true' user-set-layout-v2='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Peru&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column alias='Day' caption='Moving Average Period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;day&quot;'>
          <calculation class='tableau' formula='&quot;day&quot;' />
          <aliases>
            <alias key='&quot;day&quot;' value='Day' />
            <alias key='&quot;month&quot;' value='Month' />
            <alias key='&quot;week&quot;' value='Week' />
          </aliases>
        </column>
        <column caption='Moving Average Duration' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='50'>
          <calculation class='tableau' formula='50' />
        </column>
      </datasource-dependencies>
      <object-graph>
        <objects>
          <object caption='Data' id='Data_C94966534005412F848E96071C030883'>
            <properties context=''>
              <relation connection='excel-direct.15leczw1j0tiuh11cts050q5utwi' name='Data' table='[Data$]' type='table'>
                <columns gridOrigin='A1:K17415:no:A1:K17415:0' header='yes' outcome='6'>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='datetime' date-parse-format='yyyy-MM-dd HH:mm:ss' name='time' ordinal='1' />
                  <column datatype='integer' name='count' ordinal='2' />
                  <column datatype='real' name='temp_real_C' ordinal='3' />
                  <column datatype='real' name='temp_feels_like_C' ordinal='4' />
                  <column datatype='real' name='humidity_percent' ordinal='5' />
                  <column datatype='real' name='wind_speed_kph' ordinal='6' />
                  <column datatype='string' name='weather' ordinal='7' />
                  <column datatype='integer' name='is_holiday' ordinal='8' />
                  <column datatype='integer' name='is_weekend' ordinal='9' />
                  <column datatype='string' name='season' ordinal='10' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table'>
                <columns>
                  <column datatype='datetime' date-parse-format='yyyy-MM-dd HH:mm:ss' name='time' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <actions>
    <edit-group-action caption='Update Moving Average Period Set' name='[Action1_5FAC1594720A45C69131805BE9BB56EA]'>
      <activation type='on-select' />
      <source type='sheet' worksheet='MovingAverage' />
      <add-or-remove-marks value='assign' />
      <params>
        <param name='selection-clear-set-option' value='do-nothing' />
        <param name='target-group' value='[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[Moving Average Period Set]' />
      </params>
    </edit-group-action>
  </actions>
  <worksheets>
    <worksheet name='HeatMap'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (london_bikes_final)' name='federated.0htvmtc1p3vdzo14msbfb19bjcgi' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Day' caption='Moving Average Period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;day&quot;'>
              <calculation class='tableau' formula='&quot;day&quot;' />
              <aliases>
                <alias key='&quot;day&quot;' value='Day' />
                <alias key='&quot;month&quot;' value='Month' />
                <alias key='&quot;week&quot;' value='Week' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0htvmtc1p3vdzo14msbfb19bjcgi'>
            <column caption='In Range' datatype='boolean' name='[Calculation_258957018417389568]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_879890815977439232] &gt;= [Calculation_879890815980064769]&#13;&#10;AND&#13;&#10;[Calculation_879890815977439232] &lt;= [Min Month (copy)_879890815981150210]' />
            </column>
            <column caption='Moving Average Period' datatype='date' datatype-customized='true' name='[Calculation_879890815977439232]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATETRUNC([Parameters].[Parameter 1],[time]))' />
            </column>
            <column caption='Min Month' datatype='date' name='[Calculation_879890815980064769]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ MIN(IF[Moving Average Period Set] THEN [Calculation_879890815977439232] END) }' />
            </column>
            <column caption='Max Month ' datatype='date' name='[Min Month (copy)_879890815981150210]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ MAX(IF[Moving Average Period Set] THEN [Calculation_879890815977439232] END) }' />
            </column>
            <column caption='Wind Kph' datatype='integer' name='[Wind Speed Kph (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-2' formula='[wind_speed_kph]' peg='0' size='3.43' />
            </column>
            <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_258957018417389568]' derivation='None' name='[none:Calculation_258957018417389568:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_879890815980064769]' derivation='None' name='[none:Calculation_879890815980064769:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Min Month (copy)_879890815981150210]' derivation='None' name='[none:Min Month (copy)_879890815981150210:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Wind Speed Kph (bin)]' derivation='None' name='[none:Wind Speed Kph (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[temp real C (bin)]' derivation='None' name='[none:temp real C (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[count]' derivation='Sum' name='[sum:count:qk]' pivot='key' type='quantitative' />
            <column caption='Temp C' datatype='integer' name='[temp real C (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='-2' formula='[temp_real_C]' peg='0' size='2.49' />
            </column>
            <column caption='temp real C' datatype='real' name='[temp_real_C]' role='measure' type='quantitative' />
            <column caption='Time' datatype='datetime' datatype-customized='true' name='[time]' role='dimension' type='ordinal' />
            <column caption='Wind Speed Kph' datatype='real' name='[wind_speed_kph]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[none:Calculation_258957018417389568:nk]'>
            <groupfilter function='member' level='[none:Calculation_258957018417389568:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[none:Calculation_258957018417389568:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[sum:count:qk]' />
              <text column='[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[sum:count:qk]' />
              <lod column='[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[none:Calculation_879890815980064769:qk]' />
              <lod column='[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[none:Min Month (copy)_879890815981150210:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[none:temp real C (bin):ok]</rows>
        <cols>[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[none:Wind Speed Kph (bin):ok]</cols>
        <show-full-range>
          <column>[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[Wind Speed Kph (bin)]</column>
          <column>[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[temp real C (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{553BB55B-9489-4CB0-B0C0-E6B4A3701EF3}' />
    </worksheet>
    <worksheet name='Hour'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (london_bikes_final)' name='federated.0htvmtc1p3vdzo14msbfb19bjcgi' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Day' caption='Moving Average Period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;day&quot;'>
              <calculation class='tableau' formula='&quot;day&quot;' />
              <aliases>
                <alias key='&quot;day&quot;' value='Day' />
                <alias key='&quot;month&quot;' value='Month' />
                <alias key='&quot;week&quot;' value='Week' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0htvmtc1p3vdzo14msbfb19bjcgi'>
            <column caption='In Range' datatype='boolean' name='[Calculation_258957018417389568]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_879890815977439232] &gt;= [Calculation_879890815980064769]&#13;&#10;AND&#13;&#10;[Calculation_879890815977439232] &lt;= [Min Month (copy)_879890815981150210]' />
            </column>
            <column caption='Moving Average Period' datatype='date' datatype-customized='true' name='[Calculation_879890815977439232]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATETRUNC([Parameters].[Parameter 1],[time]))' />
            </column>
            <column caption='Min Month' datatype='date' name='[Calculation_879890815980064769]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ MIN(IF[Moving Average Period Set] THEN [Calculation_879890815977439232] END) }' />
            </column>
            <column caption='Max Month ' datatype='date' name='[Min Month (copy)_879890815981150210]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ MAX(IF[Moving Average Period Set] THEN [Calculation_879890815977439232] END) }' />
            </column>
            <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
            <column-instance column='[time]' derivation='Hour' name='[hr:time:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_258957018417389568]' derivation='None' name='[none:Calculation_258957018417389568:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_879890815980064769]' derivation='None' name='[none:Calculation_879890815980064769:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Min Month (copy)_879890815981150210]' derivation='None' name='[none:Min Month (copy)_879890815981150210:qk]' pivot='key' type='quantitative' />
            <column-instance column='[count]' derivation='Sum' name='[sum:count:qk]' pivot='key' type='quantitative' />
            <column caption='Time' datatype='datetime' datatype-customized='true' name='[time]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[none:Calculation_258957018417389568:nk]'>
            <groupfilter function='member' level='[none:Calculation_258957018417389568:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[none:Calculation_258957018417389568:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[hr:time:ok]' />
              <text column='[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[sum:count:qk]' />
              <lod column='[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[none:Calculation_879890815980064769:qk]' />
              <lod column='[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[none:Min Month (copy)_879890815981150210:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[hr:time:ok]</rows>
        <cols>[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[sum:count:qk]</cols>
      </table>
      <simple-id uuid='{F83E8763-EC93-425F-88BE-2294C72C696C}' />
    </worksheet>
    <worksheet name='MovingAverage'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (london_bikes_final)' name='federated.0htvmtc1p3vdzo14msbfb19bjcgi' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Day' caption='Moving Average Period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;day&quot;'>
              <calculation class='tableau' formula='&quot;day&quot;' />
              <aliases>
                <alias key='&quot;day&quot;' value='Day' />
                <alias key='&quot;month&quot;' value='Month' />
                <alias key='&quot;week&quot;' value='Week' />
              </aliases>
            </column>
            <column caption='Moving Average Duration' datatype='integer' name='[Parameter 2]' param-domain-type='any' role='measure' type='quantitative' value='50'>
              <calculation class='tableau' formula='50' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0htvmtc1p3vdzo14msbfb19bjcgi'>
            <column caption='Moving Average Rides' datatype='real' name='[Calculation1]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_AVG(SUM([count]), -[Parameters].[Parameter 2]+1, 0)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='In Range' datatype='boolean' name='[Calculation_258957018417389568]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_879890815977439232] &gt;= [Calculation_879890815980064769]&#13;&#10;AND&#13;&#10;[Calculation_879890815977439232] &lt;= [Min Month (copy)_879890815981150210]' />
            </column>
            <column caption='Moving Average Period' datatype='date' datatype-customized='true' name='[Calculation_879890815977439232]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATETRUNC([Parameters].[Parameter 1],[time]))' />
            </column>
            <column caption='Min Month' datatype='date' name='[Calculation_879890815980064769]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ MIN(IF[Moving Average Period Set] THEN [Calculation_879890815977439232] END) }' />
            </column>
            <column caption='Max Month ' datatype='date' name='[Min Month (copy)_879890815981150210]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ MAX(IF[Moving Average Period Set] THEN [Calculation_879890815977439232] END) }' />
            </column>
            <column-instance column='[Calculation_258957018417389568]' derivation='Attribute' name='[attr:Calculation_258957018417389568:nk]' pivot='key' type='nominal' />
            <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_879890815977439232]' derivation='None' name='[none:Calculation_879890815977439232:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_879890815980064769]' derivation='None' name='[none:Calculation_879890815980064769:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Min Month (copy)_879890815981150210]' derivation='None' name='[none:Min Month (copy)_879890815981150210:qk]' pivot='key' type='quantitative' />
            <column caption='Time' datatype='datetime' datatype-customized='true' name='[time]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation1]' derivation='User' name='[usr:Calculation1:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[usr:Calculation1:qk]' value='52' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dotted' />
            <format attr='fill-color' id='refline0' value='#f3ebf3' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[attr:Calculation_258957018417389568:nk]' />
              <lod column='[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[none:Calculation_879890815980064769:qk]' />
              <lod column='[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[none:Min Month (copy)_879890815981150210:qk]' />
            </encodings>
            <reference-line axis-column='[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[none:Calculation_879890815977439232:qk]' enable-instant-analytics='false' formula='min' id='refline0' label-type='none' paired-id='refline1' scope='per-table' symmetric='false' tooltip-type='none' value-column='[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[none:Calculation_879890815980064769:qk]' z-order='1' />
            <reference-line axis-column='[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[none:Calculation_879890815977439232:qk]' enable-instant-analytics='false' formula='max' id='refline1' label-type='none' paired-id='refline0' scope='per-table' symmetric='false' tooltip-type='none' value-column='[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[none:Min Month (copy)_879890815981150210:qk]' z-order='2' />
          </pane>
        </panes>
        <rows>[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[usr:Calculation1:qk]</rows>
        <cols>[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[none:Calculation_879890815977439232:qk]</cols>
      </table>
      <simple-id uuid='{672536DE-7EDC-400E-8B1F-84A35076012E}' />
    </worksheet>
    <worksheet name='TotalRides'>
      <layout-options>
        <title>
          <formatted-text>
            <run>London Bike Rides&#10;between &lt;</run>
            <run>[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[none:Calculation_879890815980064769:qk]</run>
            <run>&gt; and &lt;</run>
            <run>[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[none:Min Month (copy)_879890815981150210:qk]</run>
            <run>&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (london_bikes_final)' name='federated.0htvmtc1p3vdzo14msbfb19bjcgi' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Day' caption='Moving Average Period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;day&quot;'>
              <calculation class='tableau' formula='&quot;day&quot;' />
              <aliases>
                <alias key='&quot;day&quot;' value='Day' />
                <alias key='&quot;month&quot;' value='Month' />
                <alias key='&quot;week&quot;' value='Week' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0htvmtc1p3vdzo14msbfb19bjcgi'>
            <column caption='In Range' datatype='boolean' name='[Calculation_258957018417389568]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_879890815977439232] &gt;= [Calculation_879890815980064769]&#13;&#10;AND&#13;&#10;[Calculation_879890815977439232] &lt;= [Min Month (copy)_879890815981150210]' />
            </column>
            <column caption='In Range Rides' datatype='integer' name='[Calculation_258957018428805121]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ SUM(INT([Calculation_258957018417389568]) * [count]) }' />
            </column>
            <column caption='Moving Average Period' datatype='date' datatype-customized='true' name='[Calculation_879890815977439232]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATETRUNC([Parameters].[Parameter 1],[time]))' />
            </column>
            <column caption='Min Month' datatype='date' name='[Calculation_879890815980064769]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ MIN(IF[Moving Average Period Set] THEN [Calculation_879890815977439232] END) }' />
            </column>
            <column caption='Max Month ' datatype='date' name='[Min Month (copy)_879890815981150210]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ MAX(IF[Moving Average Period Set] THEN [Calculation_879890815977439232] END) }' />
            </column>
            <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_258957018417389568]' derivation='None' name='[none:Calculation_258957018417389568:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_879890815980064769]' derivation='None' name='[none:Calculation_879890815980064769:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Min Month (copy)_879890815981150210]' derivation='None' name='[none:Min Month (copy)_879890815981150210:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_258957018428805121]' derivation='Sum' name='[sum:Calculation_258957018428805121:qk]' pivot='key' type='quantitative' />
            <column caption='Time' datatype='datetime' datatype-customized='true' name='[time]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[none:Calculation_258957018417389568:nk]'>
            <groupfilter function='member' level='[none:Calculation_258957018417389568:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[none:Calculation_258957018417389568:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[sum:Calculation_258957018428805121:qk]' />
              <lod column='[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[none:Min Month (copy)_879890815981150210:qk]' />
              <lod column='[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[none:Calculation_879890815980064769:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{D630E671-70B4-483F-9A68-E0BE59C5428E}' />
    </worksheet>
    <worksheet name='Weather'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data (london_bikes_final)' name='federated.0htvmtc1p3vdzo14msbfb19bjcgi' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Day' caption='Moving Average Period' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;day&quot;'>
              <calculation class='tableau' formula='&quot;day&quot;' />
              <aliases>
                <alias key='&quot;day&quot;' value='Day' />
                <alias key='&quot;month&quot;' value='Month' />
                <alias key='&quot;week&quot;' value='Week' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0htvmtc1p3vdzo14msbfb19bjcgi'>
            <column caption='In Range' datatype='boolean' name='[Calculation_258957018417389568]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Calculation_879890815977439232] &gt;= [Calculation_879890815980064769]&#13;&#10;AND&#13;&#10;[Calculation_879890815977439232] &lt;= [Min Month (copy)_879890815981150210]' />
            </column>
            <column caption='Moving Average Period' datatype='date' datatype-customized='true' name='[Calculation_879890815977439232]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(DATETRUNC([Parameters].[Parameter 1],[time]))' />
            </column>
            <column caption='Min Month' datatype='date' name='[Calculation_879890815980064769]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ MIN(IF[Moving Average Period Set] THEN [Calculation_879890815977439232] END) }' />
            </column>
            <column caption='Max Month ' datatype='date' name='[Min Month (copy)_879890815981150210]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='{ MAX(IF[Moving Average Period Set] THEN [Calculation_879890815977439232] END) }' />
            </column>
            <column caption='Count' datatype='integer' name='[count]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_258957018417389568]' derivation='None' name='[none:Calculation_258957018417389568:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_879890815980064769]' derivation='None' name='[none:Calculation_879890815980064769:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Min Month (copy)_879890815981150210]' derivation='None' name='[none:Min Month (copy)_879890815981150210:qk]' pivot='key' type='quantitative' />
            <column-instance column='[weather]' derivation='None' name='[none:weather:nk]' pivot='key' type='nominal' />
            <column-instance column='[count]' derivation='Sum' name='[sum:count:qk]' pivot='key' type='quantitative' />
            <column caption='Time' datatype='datetime' datatype-customized='true' name='[time]' role='dimension' type='ordinal' />
            <column caption='Weather' datatype='string' name='[weather]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[none:Calculation_258957018417389568:nk]'>
            <groupfilter function='member' level='[none:Calculation_258957018417389568:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[none:weather:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[sum:count:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[none:Calculation_258957018417389568:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[none:weather:nk]' />
              <text column='[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[sum:count:qk]' />
              <lod column='[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[none:Calculation_879890815980064769:qk]' />
              <lod column='[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[none:Min Month (copy)_879890815981150210:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[none:weather:nk]</rows>
        <cols>[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[sum:count:qk]</cols>
      </table>
      <simple-id uuid='{502ECE90-403E-4FE9-8B6D-1F52D358A8AC}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='MovingAverage'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[Moving Average Period Set]' type='setMembership' />
            <card mode='type_in' param='[Parameters].[Parameter 2]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[attr:Calculation_258957018417389568:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[attr:Calculation_258957018417389568:nk]</field>
            <field>[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[none:Calculation_879890815977439232:ok]</field>
            <field>[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[none:Calculation_879890815980064769:ok]</field>
            <field>[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[none:Calculation_879890815981608963:qk]</field>
            <field>[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[none:Min Month (copy)_879890815981150210:ok]</field>
            <field>[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[yr:Calculation_879890815977439232:ok]</field>
            <field>[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[yr:Calculation_879890815980064769:ok]</field>
            <field>[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[yr:Min Month (copy)_879890815981150210:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{09474AF0-1CE1-48F6-A43D-84AA219BAED9}' />
    </window>
    <window class='worksheet' name='TotalRides'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[none:Calculation_258957018417389568:nk]</field>
            <field>[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[none:Calculation_879890815980064769:ok]</field>
            <field>[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[none:Min Month (copy)_879890815981150210:ok]</field>
            <field>[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[yr:Calculation_879890815980064769:ok]</field>
            <field>[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[yr:Min Month (copy)_879890815981150210:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9C7151A4-FD8E-42EC-9579-3729E77FDCD9}' />
    </window>
    <window class='worksheet' name='HeatMap'>
      <cards>
        <edge name='left'>
          <strip size='122'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='121'>
            <card pane-specification-id='0' param='[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[sum:count:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[none:Calculation_258957018417389568:nk]</field>
            <field>[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[none:Calculation_879890815980064769:ok]</field>
            <field>[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[none:Min Month (copy)_879890815981150210:ok]</field>
            <field>[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[none:Wind Speed Kph (bin):ok]</field>
            <field>[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[none:temp real C (bin):ok]</field>
            <field>[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[yr:Calculation_879890815980064769:ok]</field>
            <field>[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[yr:Min Month (copy)_879890815981150210:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2E227AF0-2013-47C4-8223-45072420D843}' />
    </window>
    <window class='worksheet' maximized='true' name='Weather'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[none:Calculation_258957018417389568:nk]</field>
            <field>[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[none:Calculation_879890815980064769:ok]</field>
            <field>[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[none:Min Month (copy)_879890815981150210:qk]</field>
            <field>[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[none:weather:nk]</field>
            <field>[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[yr:Calculation_879890815980064769:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{14AEC5C7-F858-4F90-8EE1-379CF5F4E5CA}' />
    </window>
    <window class='worksheet' name='Hour'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[hr:time:ok]</field>
            <field>[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[none:Calculation_258957018417389568:nk]</field>
            <field>[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[none:Calculation_879890815980064769:qk]</field>
            <field>[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[none:Min Month (copy)_879890815981150210:qk]</field>
            <field>[federated.0htvmtc1p3vdzo14msbfb19bjcgi].[yr:time:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5B1DC12C-D23E-4DAF-BD3F-1780097BADBE}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='HeatMap' width='192'>
      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
      HoQHCYDV+P8BZK7OnAz4LQoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Hour' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='MovingAverage' width='192'>
      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
      8WEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='24' name='TotalRides' width='84'>
      iVBORw0KGgoAAAANSUhEUgAAAFQAAAAYCAYAAABk8drWAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAFP0lEQVRYhe2XS2gTaxiG3zO5OrGaClVxYS/oxm0upE4VK7YmBRFvSCkqoouqCGZhKSjZ
      dSHUIsGu1I0YRFChRkm7iJaIiLeNFKRKWls0NLFNTUjGTCYz71mIOUeqHo7Eejjkgdn93zsf
      z3z//DN/kCSqVAzhdzfwf6MqtMJUhVaYqtAKUxVaYapCK0xVaIWpCq0wVaEVpiq0wlSFVpiq
      0ApTFVphFlVoPp/H4cOH4XQ6y1dvb++CdaVSCaFQCD6fD06nE5IkYWBgAMViEQBQKBTQ398P
      SZLg9/uRSqUAAMViEQMDA5AkCc3Nzejr64Msy9/sZWRkBLt27YLb7UZzczN6enqQzWYBALqu
      4+rVq9i6dSvcbjcOHDiAiYkJAMDc3BwCgQAkSYLT6YTP58ODBw/+CuYikkwmefbsWebz+R+u
      y+fzvHXrFmdmZqhpGjOZDM+cOcOhoSGSZCgUYn9/P/P5PK9fv87e3l6qqspQKMQLFy4wn8+z
      WCzy0qVLHBwcXJBfKpV4584dxuNxaprGQqHAixcvMhgMkiQfPnzI06dPM51OU9M0RqNRHjt2
      jJlMhvF4nMPDw8zlctQ0jePj4zx69CinpqZIkos6oZlMBqIoQhTFH64TRRG7d+/GqlWrIAgC
      li1bhpaWFuRyOQDA1NQU2traIIoiOjo6UFtbC0VRkEgksHfvXoiiCJPJhM7OTnz8+BGZTOar
      fIPBgB07dqCpqQmCIMBisUCSJKiqCgB4/fo12tvbUVtbC0EQsGXLFjQ0NKBQKKCpqQnbt2+H
      zWaDIAhYt24dGhoaoCgKgEXe8vPz81izZs2/qlEUBcPDwxgZGcG2bdsAAJIk4fbt25BlGZFI
      BKtXr4bNZoPFYsHQ0BBUVYWu68jlcshmswuE/h1VVfHs2TNcuXIFHR0dAICWlhZEIhHMzs5C
      13WMjo7CaDRixYoVX9V++PABg4ODsNlsaGxsBLDIQt1uNw4dOgTgs6ibN2+ip6en/HS/hSAI
      WLt2LcxmMxKJBABAlmXU1dUBAMxmM2ZmZlAqlXDy5EkcP34cJpMJgiCgpqYGgiDAarV+N99g
      MGDlypWoq6vD27dvy/l2ux0GgwEAYDQaMTc3t6BPURSxfv16pFKp8rv6t53yFosFPp8PRqPx
      hxNkMpmwYcMGdHV1IRKJQJZlxGIx7Nu3D6Ioor29Hel0Gul0ekHt9PQ0VFVFTU3Nd/MFQUB9
      fT26u7sRi8XKU79z587ylt+8eTOsVivi8fhXtTabDV6vF42NjXj+/PnnvJ/08VMEg0HEYjGo
      qgpVVREOh0FywVaamJhAOBwuS5JlGdFoFEuXLoXVaoXdbsfdu3ehKAqePHmCbDYLq9WK2dlZ
      vHv3DrquI5FI4Pz582hra8OSJUu+yk+n07hx4waSySR0XYeqqrh//z5Iwmw2o76+Hvfu3UM2
      m4Wu6xgbG8Pk5CTsdjui0SiePn1antbp6Wm8ePECy5cv/xxe0WP8H3j//j39fj89Hg9dLhdP
      nTrFZDJJkkylUjxy5AjfvHnD+fl5njt3jq2trXQ4HNy4cSP7+vrKXweZTIaBQIAej4cHDx5k
      PB4nSU5OTnL//v10uVxsbW3ltWvXqGkaSVKWZZ44cYKPHj3ip0+fePnyZXq9XjocDno8Hvr9
      /nIviqIwGAxy06ZNdLlc3LNnDx8/fkySHBsbY3d3Nz0eDx0OB71eL8PhcPk+iyr0R4yOjjIY
      DJYbqzSvXr1iIBCgoii/JP8L/4k/JV3XMT4+js7OTgjCr2np5cuX6Orqgtls/iX5X/gTaRr4
      5wZwddIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Weather' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
